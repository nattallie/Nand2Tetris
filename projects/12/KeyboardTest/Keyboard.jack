// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int cur_ch;
        let cur_ch = Memory.peek(24576);
        if ((cur_ch > 0) & (cur_ch < 153)) {
            return cur_ch;
        }
        return 0;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char ch, old_ch;
        let ch = Keyboard.keyPressed();
        while (ch = 0) {
            let ch = Keyboard.keyPressed();
        }

        let old_ch = ch;

        let ch = Keyboard.keyPressed();
        while (ch = old_ch) {
            let ch = Keyboard.keyPressed();
        }
        if (~(old_ch = String.backSpace())) {
            do Output.printChar(old_ch);
        }
        return old_ch;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String s, cur_ch, cnt;
        do Output.printString(message);

        let cnt = 0;
        let s = String.new(63);
        let cur_ch = Keyboard.readChar();

        while (~(cur_ch = String. newLine())) {
            if ((cnt > 0) & (cur_ch = String.backSpace())) {
                do Output.backSpace();
                do s.eraseLastChar();
                let cnt = cnt - 1;
            } else {
                do s.appendChar(cur_ch);
                let cnt = cnt + 1;
            }
            let cur_ch = Keyboard.readChar();
        }

        do Output.println();
        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String s, int2s;

        let s = Keyboard.readLine(message);
        return s.intValue();
    }
}
